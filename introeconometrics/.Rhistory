)
#
# DA = 35250808
#
finaldf$POP2016[finaldf$DAUID==35250808] <- (CE16$POP2016[CE16$DAUID==35251019] + CE16$POP2016[CE16$DAUID==35251020] + CE16$POP2016[CE16$DAUID==35251021])
#
finaldf$POP0TO142016[finaldf$DAUID==35250808] <- (CE16$POP0TO142016[CE16$DAUID==35251019] + CE16$POP0TO142016[CE16$DAUID==35251020] + CE16$POP0TO142016[CE16$DAUID==35251021])
#
finaldf$AVGAFTERTAXINCHH2016[finaldf$DAUID==35250808] <-     round(((CE16$AVGAFTERTAXINCHH2016[CE16$DAUID==35251019] * CE16$POP2016[CE16$DAUID==35251019] + CE16$AVGAFTERTAXINCHH2016[CE16$DAUID==35251020] * CE16$POP2016[CE16$DAUID==35251020] + CE16$AVGAFTERTAXINCHH2016[CE16$DAUID==35251021] * CE16$POP2016[CE16$DAUID==35251021]) / finaldf$POP2016[finaldf$DAUID==35250808]), 0
)
#
finaldf$PERCLOWINC0TO52016[finaldf$DAUID==35250808] <-     round(((CE16$PERCLOWINC0TO5[CE16$DAUID==35251019] * CE16$POP2016[CE16$DAUID==35251019] + CE16$PERCLOWINC0TO52016[CE16$DAUID==35251020] * CE16$POP2016[CE16$DAUID==35251020] + CE16$PERCLOWINC0TO52016[CE16$DAUID==35251021] * CE16$POP2016[CE16$DAUID==35251021]) / finaldf$POP2016[finaldf$DAUID==35250808]), 0
)
#
# DA = 35250809
#
finaldf$POP2016[finaldf$DAUID==35250809] <- (CE16$POP2016[CE16$DAUID==35251022] + CE16$POP2016[CE16$DAUID==35251023] + CE16$POP2016[CE16$DAUID==35251024])
#
finaldf$POP0TO142016[finaldf$DAUID==35250809] <- (CE16$POP0TO142016[CE16$DAUID==35251022] + CE16$POP0TO142016[CE16$DAUID==35251023] + CE16$POP0TO142016[CE16$DAUID==35251024])
#
finaldf$AVGAFTERTAXINCHH2016[finaldf$DAUID==35250809] <-     round(((CE16$AVGAFTERTAXINCHH2016[CE16$DAUID==35251022] * CE16$POP2016[CE16$DAUID==35251022] + CE16$AVGAFTERTAXINCHH2016[CE16$DAUID==35251023] * CE16$POP2016[CE16$DAUID==35251023] + CE16$AVGAFTERTAXINCHH2016[CE16$DAUID==35251024] * CE16$POP2016[CE16$DAUID==35251024]) / finaldf$POP2016[finaldf$DAUID==35250809]), 0
)
#
finaldf$PERCLOWINC0TO52016[finaldf$DAUID==35250809] <-     round(((CE16$PERCLOWINC0TO5[CE16$DAUID==35251022] * CE16$POP2016[CE16$DAUID==35251022] + CE16$PERCLOWINC0TO52016[CE16$DAUID==35251023] * CE16$POP2016[CE16$DAUID==35251023] + CE16$PERCLOWINC0TO52016[CE16$DAUID==35251024] * CE16$POP2016[CE16$DAUID==35251024]) / finaldf$POP2016[finaldf$DAUID==35250809]), 0
)
#
# DA = 35250840
#
finaldf$POP2016[finaldf$DAUID==35250840] <- (CE16$POP2016[CE16$DAUID==35251025] + CE16$POP2016[CE16$DAUID==35251026])
#
finaldf$POP0TO142016[finaldf$DAUID==35250840] <- (CE16$POP0TO142016[CE16$DAUID==35251025] + CE16$POP0TO142016[CE16$DAUID==35251026])
#
finaldf$AVGAFTERTAXINCHH2016[finaldf$DAUID==35250840] <-     round(((CE16$AVGAFTERTAXINCHH2016[CE16$DAUID==35251025] * CE16$POP2016[CE16$DAUID==35251025] + CE16$AVGAFTERTAXINCHH2016[CE16$DAUID==35251026] * CE16$POP2016[CE16$DAUID==35251026]) / finaldf$POP2016[finaldf$DAUID==35250840]), 0
)
#
finaldf$PERCLOWINC0TO52016[finaldf$DAUID==35250840] <-     round(((CE16$PERCLOWINC0TO5[CE16$DAUID==35251025] * CE16$POP2016[CE16$DAUID==35251025] + CE16$PERCLOWINC0TO52016[CE16$DAUID==35251026] * CE16$POP2016[CE16$DAUID==35251026]) / finaldf$POP2016[finaldf$DAUID==35250840]), 0
)
#
# DA = 35850841
#
finaldf$POP2016[finaldf$DAUID==35250841] <- (CE16$POP2016[CE16$DAUID==35250990] + CE16$POP2016[CE16$DAUID==35250991] + CE16$POP2016[CE16$DAUID==35250992])
#
finaldf$POP0TO142016[finaldf$DAUID==35250841] <- (CE16$POP0TO142016[CE16$DAUID==35250990] + CE16$POP0TO142016[CE16$DAUID==35250991] + CE16$POP0TO142016[CE16$DAUID==35250992])
#
finaldf$AVGAFTERTAXINCHH2016[finaldf$DAUID==35250841] <-     round(((CE16$AVGAFTERTAXINCHH2016[CE16$DAUID==35250990] * CE16$POP2016[CE16$DAUID==35250990] + CE16$AVGAFTERTAXINCHH2016[CE16$DAUID==35250991] * CE16$POP2016[CE16$DAUID==35250991] + CE16$AVGAFTERTAXINCHH2016[CE16$DAUID==35250992] * CE16$POP2016[CE16$DAUID==35250992]) / finaldf$POP2016[finaldf$DAUID==35250841]), 0
)
#
finaldf$PERCLOWINC0TO52016[finaldf$DAUID==35250841] <-     round(((CE16$PERCLOWINC0TO5[CE16$DAUID==35250990] * CE16$POP2016[CE16$DAUID==35250990] + CE16$PERCLOWINC0TO52016[CE16$DAUID==35250991] * CE16$POP2016[CE16$DAUID==35250991] + CE16$PERCLOWINC0TO52016[CE16$DAUID==35250992] * CE16$POP2016[CE16$DAUID==35250992]) / finaldf$POP2016[finaldf$DAUID==35250841]), 0
)
#
# DA = 35250842
#
finaldf$POP2016[finaldf$DAUID==35250842] <- (CE16$POP2016[CE16$DAUID==35250986] + CE16$POP2016[CE16$DAUID==35250987])
#
finaldf$POP0TO142016[finaldf$DAUID==35250842] <- (CE16$POP0TO142016[CE16$DAUID==35250986] + CE16$POP0TO142016[CE16$DAUID==35250987])
#
finaldf$AVGAFTERTAXINCHH2016[finaldf$DAUID==35250842] <-     round(((CE16$AVGAFTERTAXINCHH2016[CE16$DAUID==35250986] * CE16$POP2016[CE16$DAUID==35250986] + CE16$AVGAFTERTAXINCHH2016[CE16$DAUID==35250987] * CE16$POP2016[CE16$DAUID==35250987]) / finaldf$POP2016[finaldf$DAUID==35250842]), 0
)
#
finaldf$PERCLOWINC0TO52016[finaldf$DAUID==35250842] <-     round(((CE16$PERCLOWINC0TO5[CE16$DAUID==35250986] * CE16$POP2016[CE16$DAUID==35250986] + CE16$PERCLOWINC0TO52016[CE16$DAUID==35250987] * CE16$POP2016[CE16$DAUID==35250987]) / finaldf$POP2016[finaldf$DAUID==35250842]), 0
)
#
# DA = 35250844
#
# Unfortunately, one of the 2016 DAs that makes this up has an NA for income, so we'll
# skip this one and strip it when we strip 2016 NAs at the end
#
# DA = 35250858
#
finaldf$POP2016[finaldf$DAUID==35250858] <- (CE16$POP2016[CE16$DAUID==35251000] + CE16$POP2016[CE16$DAUID==35251001] + CE16$POP2016[CE16$DAUID==35251002])
#
finaldf$POP0TO142016[finaldf$DAUID==35250858] <- (CE16$POP0TO142016[CE16$DAUID==35251000] + CE16$POP0TO142016[CE16$DAUID==35251001] + CE16$POP0TO142016[CE16$DAUID==35251002])
#
finaldf$AVGAFTERTAXINCHH2016[finaldf$DAUID==35250858] <-     round(((CE16$AVGAFTERTAXINCHH2016[CE16$DAUID==35251000] * CE16$POP2016[CE16$DAUID==35251000] + CE16$AVGAFTERTAXINCHH2016[CE16$DAUID==35251001] * CE16$POP2016[CE16$DAUID==35251001] + CE16$AVGAFTERTAXINCHH2016[CE16$DAUID==35251002] * CE16$POP2016[CE16$DAUID==35251002]) / finaldf$POP2016[finaldf$DAUID==35250858]), 0
)
#
finaldf$PERCLOWINC0TO52016[finaldf$DAUID==35250858] <-     round(((CE16$PERCLOWINC0TO5[CE16$DAUID==35251000] * CE16$POP2016[CE16$DAUID==35251000] + CE16$PERCLOWINC0TO52016[CE16$DAUID==35251001] * CE16$POP2016[CE16$DAUID==35251001] + CE16$PERCLOWINC0TO52016[CE16$DAUID==35251002] * CE16$POP2016[CE16$DAUID==35251002]) / finaldf$POP2016[finaldf$DAUID==35250858]), 0
)
#
# DA = 35250915
#
# Unfortunately, one of the 2016 DAs that makes this up has an NA for income too, so we'll
# skip this one and strip it when we strip 2016 NAs at the end
#
# DA = 35250916
# this next one's a monster, it got split into 6 DAs by 2016!
#
finaldf$POP2016[finaldf$DAUID==35250916] <- (CE16$POP2016[CE16$DAUID==35251033] + CE16$POP2016[CE16$DAUID==35251035] + CE16$POP2016[CE16$DAUID==35251036] + CE16$POP2016[CE16$DAUID==35251037] + CE16$POP2016[CE16$DAUID==35251038] + CE16$POP2016[CE16$DAUID==35251039])
#
finaldf$POP0TO142016[finaldf$DAUID==35250916] <- (CE16$POP0TO142016[CE16$DAUID==35251033] + CE16$POP0TO142016[CE16$DAUID==35251035] + CE16$POP0TO142016[CE16$DAUID==35251036] + CE16$POP0TO142016[CE16$DAUID==35251037] + CE16$POP2016[CE16$DAUID==35251038] + CE16$POP2016[CE16$DAUID==35251039])
#
finaldf$AVGAFTERTAXINCHH2016[finaldf$DAUID==35250916] <-     round(((CE16$AVGAFTERTAXINCHH2016[CE16$DAUID==35251033] * CE16$POP2016[CE16$DAUID==35251033] + CE16$AVGAFTERTAXINCHH2016[CE16$DAUID==35251035] * CE16$POP2016[CE16$DAUID==35251035] + CE16$AVGAFTERTAXINCHH2016[CE16$DAUID==35251036] * CE16$POP2016[CE16$DAUID==35251036] + CE16$AVGAFTERTAXINCHH2016[CE16$DAUID==35251037] * CE16$POP2016[CE16$DAUID==35251037] + CE16$AVGAFTERTAXINCHH2016[CE16$DAUID==35251038] * CE16$POP2016[CE16$DAUID==35251038] + CE16$AVGAFTERTAXINCHH2016[CE16$DAUID==35251039] * CE16$POP2016[CE16$DAUID==35251039]) / finaldf$POP2016[finaldf$DAUID==35250916]), 0
)
#
finaldf$PERCLOWINC0TO52016[finaldf$DAUID==35250916] <-     round(((CE16$PERCLOWINC0TO5[CE16$DAUID==35251033] * CE16$POP2016[CE16$DAUID==35251033] + CE16$PERCLOWINC0TO52016[CE16$DAUID==35251035] * CE16$POP2016[CE16$DAUID==35251035] + CE16$PERCLOWINC0TO52016[CE16$DAUID==35251036] * CE16$POP2016[CE16$DAUID==35251036] + CE16$PERCLOWINC0TO52016[CE16$DAUID==35251037] * CE16$POP2016[CE16$DAUID==35251037] + CE16$PERCLOWINC0TO52016[CE16$DAUID==35251038] * CE16$POP2016[CE16$DAUID==35251038] + CE16$PERCLOWINC0TO52016[CE16$DAUID==35251039] * CE16$POP2016[CE16$DAUID==35251039]) / finaldf$POP2016[finaldf$DAUID==35250916]), 0
)
#
# DA = 35250917
#
finaldf$POP2016[finaldf$DAUID==35250917] <- (CE16$POP2016[CE16$DAUID==35250996] + CE16$POP2016[CE16$DAUID==35250997])
#
finaldf$POP0TO142016[finaldf$DAUID==35250917] <- (CE16$POP0TO142016[CE16$DAUID==35250996] + CE16$POP0TO142016[CE16$DAUID==35250997])
#
finaldf$AVGAFTERTAXINCHH2016[finaldf$DAUID==35250917] <-     round(((CE16$AVGAFTERTAXINCHH2016[CE16$DAUID==35250996] * CE16$POP2016[CE16$DAUID==35250996] + CE16$AVGAFTERTAXINCHH2016[CE16$DAUID==35250997] * CE16$POP2016[CE16$DAUID==35250997]) / finaldf$POP2016[finaldf$DAUID==35250917]), 0
)
#
finaldf$PERCLOWINC0TO52016[finaldf$DAUID==35250917] <-     round(((CE16$PERCLOWINC0TO5[CE16$DAUID==35250996] * CE16$POP2016[CE16$DAUID==35250996] + CE16$PERCLOWINC0TO52016[CE16$DAUID==35250997] * CE16$POP2016[CE16$DAUID==35250997]) / finaldf$POP2016[finaldf$DAUID==35250917]), 0
)
#
# DA = 35250926
#
finaldf$POP2016[finaldf$DAUID==35250926] <- (CE16$POP2016[CE16$DAUID==35250976] + CE16$POP2016[CE16$DAUID==35250980])
#
finaldf$POP0TO142016[finaldf$DAUID==35250926] <- (CE16$POP0TO142016[CE16$DAUID==35250976] + CE16$POP0TO142016[CE16$DAUID==35250980])
#
finaldf$AVGAFTERTAXINCHH2016[finaldf$DAUID==35250926] <-     round(((CE16$AVGAFTERTAXINCHH2016[CE16$DAUID==35250976] * CE16$POP2016[CE16$DAUID==35250976] + CE16$AVGAFTERTAXINCHH2016[CE16$DAUID==35250980] * CE16$POP2016[CE16$DAUID==35250980]) / finaldf$POP2016[finaldf$DAUID==35250926]), 0
)
#
finaldf$PERCLOWINC0TO52016[finaldf$DAUID==35250926] <-     round(((CE16$PERCLOWINC0TO5[CE16$DAUID==35250976] * CE16$POP2016[CE16$DAUID==35250976] + CE16$PERCLOWINC0TO52016[CE16$DAUID==35250980] * CE16$POP2016[CE16$DAUID==35250980]) / finaldf$POP2016[finaldf$DAUID==35250926]), 0
)
#
# DA = 35250927
#
finaldf$POP2016[finaldf$DAUID==35250927] <- (CE16$POP2016[CE16$DAUID==35250978])
#
finaldf$POP0TO142016[finaldf$DAUID==35250927] <- (CE16$POP0TO142016[CE16$DAUID==35250978])
#
finaldf$AVGAFTERTAXINCHH2016[finaldf$DAUID==35250927] <-     (CE16$AVGAFTERTAXINCHH2016[CE16$DAUID==35250978])
#
finaldf$PERCLOWINC0TO52016[finaldf$DAUID==35250927] <- (CE16$PERCLOWINC0TO5[CE16$DAUID==35250978])
#
# now we have to strip out all DAs with NA for 2016 data
#
finaldf <- subset(finaldf, !is.na(AVGAFTERTAXINCHH2016))
finaldf <- subset(finaldf, !is.na(PERCLOWINC0TO52016))
finaldf <- subset(finaldf, AVGAFTERTAXINCHH2016>0)
#
# calculate delta income, and the flag for delta income above or below city weighted average value
#
finaldf$deltaincome <- finaldf$AVGAFTERTAXINCHH2016/finaldf$AVGAFTERTAXINCHH2006
finaldf$deltaincoveravg <- as.integer(finaldf$deltaincome > finaldf$deltaincome[finaldf$DAUID==3525])
#
# calculate delta pop 0 to 14
#
finaldf$deltapop0to14 <- finaldf$POP0TO142016 - finaldf$POP0TO142006
#
# load the public school DA geometry file, join it to census file
#
DAgeometry <- st_read("./ArcGIS", layer = "Join_Output")
DAgeometry <- mutate(DAgeometry, DAUID = as.integer(as.character(DAUID)))
DAs <- DAgeometry %>%
select(DAUID, Max_CLOSED, geometry)
DAsj <- inner_join(DAs, finaldf)
DAsj$Isschoolclosed <- as.numeric(DAsj$Max_CLOSED==1 | DAsj$Max_CLOSED==2)
ham_bb <- st_bbox(DAsj %>% filter(DAUID %in% c("35250267", "35250942")))
#new tmap with bbox
tm_shape(DAsj, bbox = ham_bb) +
tm_borders() +
tm_layout(legend.title.size = 1,
legend.text.size = 0.6,
#          legend.position = c("top","right"),
legend.bg.alpha = 1) +
tm_polygons(col = "Isschoolclosed", title="School Status",
style = "fixed",
breaks = c(0, 0.9, 2),
labels = c("Not Closed", "Closed")
)
DAcath <- st_read("./ArcGIS/CATHOLIC", layer = "Join_Cath")
DAcath <- mutate(DAcath, DAUID = as.integer(as.character(DAUID)))
DAcath <- DAcath %>%
rename(
Cath_CLOSED = Max_CLOSED
)
st_geometry(DAcath) <- NULL
DAcath <- DAcath %>% select(DAUID, Cath_CLOSED)
DAsj2 <- inner_join(DAsj, DAcath)
DAsj2$Isschoolclosed2 <- as.numeric(DAsj2$Cath_CLOSED==1 | DAsj2$Cath_CLOSED==2)
#new tmap with bbox
tm_shape(DAsj2, bbox = ham_bb) +
tm_borders() +
tm_layout(legend.title.size = 1,
legend.text.size = 0.6,
#          legend.position = c("top","right"),
legend.bg.alpha = 1) +
tm_polygons(col = "Isschoolclosed2", title="School Status",
style = "fixed",
breaks = c(0, 0.9, 2),
labels = c("Not Closed", "Closed")
)
library(gridExtra)
# Recreate Figure 1
a <- ggplot(DAsj, aes(x = AVGAFTERTAXINCHH2006))
a <- a + geom_density(aes(color = as.factor(Isschoolclosed))) +
geom_vline(aes(xintercept = mean(deltaincome)),
linetype = "dashed", size = 0.6) +
labs(title="Public schools",x="DA 2006 average income", y = "Density", col="School Closed")
a <- a + theme(legend.position="bottom")
#
b <- ggplot(DAsj2, aes(x = AVGAFTERTAXINCHH2006))
b <- b + geom_density(aes(color = as.factor(Isschoolclosed2))) +
geom_vline(aes(xintercept = mean(deltaincome)),
linetype = "dashed", size = 0.6) +
labs(title="Catholic schools",x="DA 2006 average income", y = "Density", col="School Closed")
b <- b + theme(legend.position="bottom")
grid.arrange(a, b, ncol = 2)
# Recreate Figure
c <- ggplot(DAsj, aes(x = (deltaincome)))
c <- c + geom_density(aes(color = as.factor(Isschoolclosed))) +  xlim(NA,2.5) +
geom_vline(aes(xintercept = mean(deltapop0to14)),
linetype = "dashed", size = 0.6) +
labs(title="Public schools",x="DA delta income (%)", y = "Density", col="School closed")
c <- c + theme(legend.position="bottom")
#
d <- ggplot(DAsj2, aes(x = (deltaincome)))
d <- d + geom_density(aes(color = as.factor(Isschoolclosed2))) + xlim(NA,2.5) +
geom_vline(aes(xintercept = mean(deltapop0to14)),
linetype = "dashed", size = 0.6) +
labs(title="Catholic schools",x="DA delta income (%)", y = "Density", col="School closed")
d <- d + theme(legend.position="bottom")
grid.arrange(c, d, ncol = 2)
Pprobit <- glm(Isschoolclosed ~ deltaincome + deltapop0to14 + POP0TO142006 + log(AVGAFTERTAXINCHH2006) + PERCLOWINC0TO52006, family = binomial(link = "probit"), data = DAsj)
summary(Pprobit)
Cprobit <- glm(Isschoolclosed2 ~ deltaincome + deltapop0to14 + POP0TO142006 + log(AVGAFTERTAXINCHH2006) + PERCLOWINC0TO52006, family = binomial(link = "probit"), data = DAsj2)
summary(Cprobit)
z <- summary(Cprobit)
z$coefficients
models.df <- data.frame(Estimate.1 = Pprobit$coefficients,
pval.1 = paste(ifelse(summary(Pprobit)$coefficients[,4] > 0.001,
round(summary(Pprobit)$coefficients[,4], 3),
"< 0.001")),
Estimate.2 = Cprobit$coefficients,
pval.2 = paste(ifelse(summary(Cprobit)$coefficients[,4] > 0.001,
round(summary(Cprobit)$coefficients[,4], 3),
"< 0.001")))
kable(models.df,
digits = 3,
booktabs = TRUE,
escape = FALSE,
col.names = c("$\\beta$", "p-val", "$\\beta$", "p-val"),
caption = "\\label{tab:probitresults} Regression results: Likelihood of school closure") %>%
add_header_above(c("Variable" = 1,
"Public" = 2,
"Catholic" = 2),
escape = FALSE) %>%
footnote(c(paste("AIC (Public) = ", as.character(round(summary(Pprobit)$aic, 2))),
paste("AIC (Catholic) = ", as.character(round(summary(Cprobit)$aic, 2)))),
escape = FALSE)
table1.df <- data.frame(Flag = c("0", "1", "2", "3", "4", "9"),
Meaning = c("DA is completely outside closed catchment",
"DA is completely inside closed catchment",
"DA is about 70-90% inside closed catchment",
"DA is about 30-70% inside closed catchment",
"DA is only 10-30% inside closed catchment",
"DA is outside closed catchment with coincident edge"))
kable(table1.df) %>% kable_styling(latex_options = c("scale_down"))
table1.df <- data.frame(Flag = c("0", "1", "2", "3", "4", "9"),
Meaning = c("DA is completely outside closed catchment",
"DA is completely inside closed catchment",
"DA is about 70-90% inside closed catchment",
"DA is about 30-70% inside closed catchment",
"DA is only 10-30% inside closed catchment",
"DA is outside closed catchment with coincident edge"))
kable(table1.df) %>% kable_styling(latex_options = c("scale_down"))
table0.df <- data.frame(Flag = c("Isschoolclosed", "Isschoolclosed2", "deltaincome", "deltapop0to14", "POP0TO142006", "log(AVGAFTERTAXINCHH2006)", "PERCLOWINC0TO52006"),
Meaning = c("probability of public primary school closure",
"probability of Catholic primary school closure",
"percent change in DA average aftertax household income, 2006-2016",
"absolute change in child (0-14) population, 2006-2016",
"child (0-14) population, 2006",
"log of 2006 average after-tax household income",
"percent of children 0-5 under family low-income threshold, 2006"))
kable(table0.df) %>% kable_styling(latex_options = c("scale_down"))
table0.df <- data.frame(Variable = c("Isschoolclosed", "Isschoolclosed2", "deltaincome", "deltapop0to14", "POP0TO142006", "log(AVGAFTERTAXINCHH2006)", "PERCLOWINC0TO52006"),
Meaning = c("probability of public primary school closure",
"probability of Catholic primary school closure",
"percent change in DA average aftertax household income, 2006-2016",
"absolute change in child (0-14) population, 2006-2016",
"child (0-14) population, 2006",
"log of 2006 average after-tax household income",
"percent of children 0-5 under family low-income threshold, 2006"))
kable(table0.df) %>% kable_styling(latex_options = c("scale_down"))
table0.df <- data.frame(Variable = c("Isschoolclosed", "Isschoolclosed2", "deltaincome", "deltapop0to14", "POP0TO142006", "log(AVGAFTERTAXINCHH2006)", "PERCLOWINC0TO52006"),
Meaning = c("probability of public primary school closure",
"probability of Catholic primary school closure",
"percent change in DA average aftertax household income, 2006-2016",
"absolute change in child (0-14) population, 2006-2016",
"child (0-14) population, 2006",
"log of 2006 average after-tax household income",
"percent of children 0-5 under family low-income threshold, 2006"))
kable(table0.df, caption = "\\label{tab:probitvars} Regression variables used") %>% kable_styling(latex_options = c("scale_down"))
models.df <- data.frame(Estimate.1 = Pprobit$coefficients,
pval.1 = paste(ifelse(summary(Pprobit)$coefficients[,4] > 0.001,
round(summary(Pprobit)$coefficients[,4], 3),
"< 0.001")),
Estimate.2 = Cprobit$coefficients,
pval.2 = paste(ifelse(summary(Cprobit)$coefficients[,4] > 0.001,
round(summary(Cprobit)$coefficients[,4], 3),
"< 0.001")))
kable(models.df,
digits = 3,
booktabs = TRUE,
escape = FALSE,
col.names = c("$\\beta$", "p-val", "$\\beta$", "p-val"),
caption = "\\label{tab:probitresults} Regression results: Likelihood of school closure") %>%
add_header_above(c("Variable" = 1,
"Public" = 2,
"Catholic" = 2),
escape = FALSE) %>%
footnote(c(paste("AIC (Public) = ", as.character(round(summary(Pprobit)$aic, 2))),
paste("AIC (Catholic) = ", as.character(round(summary(Cprobit)$aic, 2)))),
escape = FALSE)
table0.df <- data.frame(Variable = c("deltaincome", "deltapop0to14", "POP0TO142006", "log(AVGAFTERTAXINCHH2006)", "PERCLOWINC0TO52006"),
Meaning = c("percent change in DA average aftertax household income, 2006-2016",
"absolute change in child (0-14) population, 2006-2016",
"child (0-14) population, 2006",
"natural log of 2006 average after-tax household income",
"percent of children 0-5 under family low-income threshold, 2006"))
kable(table0.df, caption = "\\label{tab:probitvars} Regression variables used") %>% kable_styling(latex_options = c("scale_down"))
library(dplyr)
library(ggplot2)
library(kableExtra)
library(rticles)
library(sf)
library(gridExtra)
library(tidyverse)
library(tmap)
table0.df <- data.frame(Variable = c("deltaincome", "deltapop0to14", "POP0TO142006", "log(AVGAFTERTAXINCHH2006)", "PERCLOWINC0TO52006"),
Meaning = c("percent change in DA average aftertax household income, 2006-2016",
"absolute change in child (0-14) population, 2006-2016",
"child (0-14) population, 2006",
"natural log of 2006 average after-tax household income",
"percent of children 0-5 under family low-income threshold, 2006"))
kable(table0.df, caption = "\\label{tab:probitvars} Regression variables used") %>% kable_styling(latex_options = c("scale_down"))
pi
exp(1)
log(10)
log10(10)
log2(10)
log(10, base = 7)
log(10)
log10(10)
log2(10)
log(10, base = .2)
log(10)
log10(10)
log2(10)
log(10, base = 77)
log(10)
log10(10)
log2(10)
log(10, base = 77.1)
77.1^0.5299264
install_github(repo = "ScPoEcon/ScPoEconometrics")
library(devtools)
install_github(repo = "ScPoEcon/ScPoEconometrics")
install.packages(c("BH", "broom", "callr", "cartogram", "cli", "covr", "curl", "data.table", "DBI", "DescTools", "DT", "e1071", "geometry", "goftest", "igraph", "leafpop", "maptools", "mime", "openxlsx", "pillar", "plotrix", "plyr", "R.utils", "RcppArmadillo", "rgdal", "RgoogleMaps", "rmarkdown", "roxygen2", "rsconnect", "rticles", "rversions", "satellite", "spatialreg", "spatstat", "spatstat.utils", "testthat", "tinytex", "vctrs"))
install.packages(c("BH", "broom", "callr", "cartogram", "cli", "covr", "curl", "data.table", "DBI", "DescTools", "DT", "e1071", "geometry", "goftest", "igraph", "leafpop", "maptools", "mime", "openxlsx", "pillar", "plotrix", "plyr", "R.utils", "RcppArmadillo", "rgdal", "RgoogleMaps", "rmarkdown", "roxygen2", "rsconnect", "rticles", "rversions", "satellite", "spatialreg", "spatstat", "spatstat.utils", "testthat", "tinytex", "vctrs"))
install.packages(c("BH", "broom", "callr", "cartogram", "cli", "covr", "curl", "data.table", "DBI", "DescTools", "DT", "e1071", "geometry", "goftest", "igraph", "leafpop", "maptools", "mime", "openxlsx", "pillar", "plotrix", "plyr", "R.utils", "RcppArmadillo", "rgdal", "RgoogleMaps", "rmarkdown", "roxygen2", "rsconnect", "rticles", "rversions", "satellite", "spatialreg", "spatstat", "spatstat.utils", "testthat", "tinytex", "vctrs"))
install.packages(c("BH", "broom", "callr", "cartogram", "cli", "covr", "curl", "data.table", "DBI", "DescTools", "DT", "e1071", "geometry", "goftest", "igraph", "leafpop", "maptools", "mime", "openxlsx", "pillar", "plotrix", "plyr", "R.utils", "RcppArmadillo", "rgdal", "RgoogleMaps", "rmarkdown", "roxygen2", "rsconnect", "rticles", "rversions", "satellite", "spatialreg", "spatstat", "spatstat.utils", "testthat", "tinytex", "vctrs"))
library(ScPoEconometrics)
install_github(repo = "ScPoEcon/ScPoEconometrics")
library(devtools)
install_github(repo = "ScPoEcon/ScPoEconometrics")
library(ScPoEconometrics)
packageVersion("ScPoEconometrics")
seq(from = 1.5, to = 4.2, by = 0.1)
seq(1.5, 4.2, 0.1)
rep("A", times = 10)
x = c(1, 3, 5, 7, 8, 9)
x = c(1, 3, 5, 7, 8, 9)
x
x[-2]
x[1:3]
x[c(1,3,4)]
z = c(TRUE, TRUE, FALSE, TRUE, TRUE, FALSE)
x[z]
x = 1:10  # a vector
x
x + 1     # add a scalar
2 * x     # multiply all elements by 2
rev(x)
x = 1:9
rev(x)
rep(1, 9)
rbind(x, rev(x), rep(1, 9))
cbind(col_1 = x, col_2 = rev(x), col_3 = rep(1, 9))
t(cbind(col_1 = x, col_2 = rev(x), col_3 = rep(1, 9)))
x = 1:9
y = 9:1
X = matrix(x, 3, 3)
Y = matrix(y, 3, 3)
solve(X)
x = 1:9
y = 9:1
X = matrix(x, 3, 3)
Y = matrix(y, 3, 3)
solve(Y)
x = c(3,0,3,0,2,2,1,5,5)
y = 9:1
X = matrix(x, 3, 3)
Y = matrix(y, 3, 3)
solve(Y)
x = c(3,0,3,0,2,2,1,5,5)
y = 9:1
(X = matrix(x, 3, 3))
(Y = matrix(y, 3, 3))
solve(X)
x = c(3,0,3,0,2,2,1,5,5)
y = 9:1
(X = matrix(x, 3, 3))
(Y = matrix(y, 3, 3))
Z <- solve(X)
x = c(3,0,3,0,2,2,1,5,5)
y = 9:1
(X = matrix(x, 3, 3))
(Y = matrix(y, 3, 3))
(Z <- solve(X))
x = c(3,0,3,0,2,2,1,5,5)
y = 9:1
(X = matrix(x, 3, 3))
(Y = matrix(y, 3, 3))
(Z <- solve(X))
X %*% Z
path = system.file(package="ScPoEconometrics","datasets","example-data.csv")
example_data_from_disk = read.csv(path)
path = system.file(package="ScPoEconometrics","datasets","example-data.csv")
example_data_from_disk = read.csv(path)
example_data_from_disk
mtcars
head(mtcars,n=2)
str(mtcars)
?mtcars
names(mtcars)
dim(mtcars)
dim(mtcars)
nrow(mtcars)
ncol(mtcars)
mtcars[mtcars$mpg > 20, c("cyl", "disp", "wt")]
subset(mtcars, subset = mpg > 25, select = c("cyl", "disp", "wt"))
for (i in 1:5){
print(i)
}
for (i in c("mangos","bananas","apples")){
print(paste("I love",i))  # the paste function pastes together strings
}
for (i in 2:3){
# first nest: for each i
for (j in c("mangos","bananas","apples")){
# second nest: for each j
print(paste("Can I get",i,j,"please?"))
}
}
hello <- function(your_name = "Lord Vader"){
paste("You R most welcome,",your_name)
# we could also write:
# return(paste("You R most welcome,",your_name))
}
# we call the function by typing it's name with round brackets
hello()
hello
hello
dim(hello)
dim(hello)
library(ggplot2)
cty
mpg$cty
mpg
mean(mpg$cty)
median(mpg$cty)
var(mpg$cty)
sd(mpg$cty)
IQR(mpg$cty)
min(mpg$cty)
max(mpg$cty)
range(mpg$cty)
hist(mpg$cty)
hist(mpg$cty,
xlab   = "Miles Per Gallon (City)",
main   = "Histogram of MPG (City)", # main title
breaks = 12,   # how many breaks?
col    = "red",
border = "blue")
barplot(table(mpg$drv),
xlab   = "Drivetrain (f = FWD, r = RWD, 4 = 4WD)",
ylab   = "Frequency",
main   = "Drivetrains",
col    = "dodgerblue",
border = "darkorange")
unique(mpg$drv)
boxplot(mpg$hwy)
boxplot(hwy ~ drv, data = mpg)
mpg
boxplot(hwy ~ drv, data = manufacturer)
boxplot(hwy ~ manufacturer, data = mpg)
boxplot(hwy ~ class, data = mpg)
unique(mpg$class)
?boxplot
help(bxp)
par(cex.lab=0.7)
boxplot(hwy ~ class, data = mpg)
boxplot(hwy ~ class, data = mpg)
par(cex.axis=0.6)
boxplot(hwy ~ class, data = mpg)
par(cex.axis=0.7)
boxplot(hwy ~ class, data = mpg)
boxplot(hwy ~ class, data = mpg)
par(cex.axis=0.8)
boxplot(hwy ~ class, data = mpg)
par(cex.axis=0.9)
boxplot(hwy ~ class, data = mpg)
par(cex.axis=0.8)
boxplot(hwy ~ class, data = mpg)
